// Generated by CoffeeScript 1.8.0
(function() {
  var Neutrumator;

  Neutrumator = (function() {
    var tagNames;

    tagNames = ['h1', 'h2', 'h3', 'h4', 'h5', 'p'];

    function Neutrumator() {
      console.log('Neutrumator geladen');
    }

    Neutrumator.prototype.cleanText = function() {
      var element, tagName, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = tagNames.length; _i < _len; _i++) {
        tagName = tagNames[_i];
        if (document.getElementsByTagName(tagName).length > 0) {
          _results.push((function() {
            var _j, _len1, _ref, _results1;
            _ref = document.getElementsByTagName(tagName);
            _results1 = [];
            for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
              element = _ref[_j];
              _results1.push(this.removeStupidityFrom(element));
            }
            return _results1;
          }).call(this));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    Neutrumator.prototype.removeStupidityFrom = function(content) {
      var _results;
      while (content.innerText.match(/\*innen/)) {
        content.innerText = content.innerText.replace(/\*innen/, "Innen");
      }
      while (content.innerText.match(/_innen/)) {
        content.innerText = content.innerText.replace(/_innen/, "Innen");
      }
      while (content.innerText.match(/\*in /)) {
        content.innerText = content.innerText.replace(/\*in /, " ");
      }
      _results = [];
      while (content.innerText.match(/\*n /)) {
        _results.push(content.innerText = content.innerText.replace(/\*n /, "n "));
      }
      return _results;
    };

    return Neutrumator;

  })();

  window.cleaner = new Neutrumator();

  window.onload = function() {
    return window.cleaner.cleanText();
  };

}).call(this);
